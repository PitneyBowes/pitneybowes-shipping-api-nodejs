/**
 * Shipping API
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';
import { Carrier } from './carrier';
import { DeliveryCommitment } from './deliveryCommitment';
import { Discount } from './discount';
import { ParcelType } from './parcelType';
import { ParcelWeight } from './parcelWeight';
import { Services } from './services';
import { SpecialService } from './specialService';
import { Surcharge } from './surcharge';
import { Tax } from './tax';

export class Rate {
    'alternateBaseCharge'?: number;
    'alternateTotalCharge'?: number;
    'baseCharge'?: number;
    'baseChargeTaxes'?: Array<Tax>;
    'carrier': Carrier;
    /**
    * ISO-4217
    */
    'currencyCode'?: string;
    'deliveryCommitment'?: DeliveryCommitment;
    'destinationZone'?: number;
    'dimensionalWeight'?: ParcelWeight;
    'discounts'?: Array<Discount>;
    'inductionPostalCode'?: string;
    'parcelType': ParcelType;
    'rateTypeId'?: string;
    'serviceId'?: Services;
    'specialServices'?: Array<SpecialService>;
    'surcharges'?: Array<Surcharge>;
    'totalCarrierCharge'?: number;
    'totalTaxAmount'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "alternateBaseCharge",
            "baseName": "alternateBaseCharge",
            "type": "number"
        },
        {
            "name": "alternateTotalCharge",
            "baseName": "alternateTotalCharge",
            "type": "number"
        },
        {
            "name": "baseCharge",
            "baseName": "baseCharge",
            "type": "number"
        },
        {
            "name": "baseChargeTaxes",
            "baseName": "baseChargeTaxes",
            "type": "Array<Tax>"
        },
        {
            "name": "carrier",
            "baseName": "carrier",
            "type": "Carrier"
        },
        {
            "name": "currencyCode",
            "baseName": "currencyCode",
            "type": "string"
        },
        {
            "name": "deliveryCommitment",
            "baseName": "deliveryCommitment",
            "type": "DeliveryCommitment"
        },
        {
            "name": "destinationZone",
            "baseName": "destinationZone",
            "type": "number"
        },
        {
            "name": "dimensionalWeight",
            "baseName": "dimensionalWeight",
            "type": "ParcelWeight"
        },
        {
            "name": "discounts",
            "baseName": "discounts",
            "type": "Array<Discount>"
        },
        {
            "name": "inductionPostalCode",
            "baseName": "inductionPostalCode",
            "type": "string"
        },
        {
            "name": "parcelType",
            "baseName": "parcelType",
            "type": "ParcelType"
        },
        {
            "name": "rateTypeId",
            "baseName": "rateTypeId",
            "type": "string"
        },
        {
            "name": "serviceId",
            "baseName": "serviceId",
            "type": "Services"
        },
        {
            "name": "specialServices",
            "baseName": "specialServices",
            "type": "Array<SpecialService>"
        },
        {
            "name": "surcharges",
            "baseName": "surcharges",
            "type": "Array<Surcharge>"
        },
        {
            "name": "totalCarrierCharge",
            "baseName": "totalCarrierCharge",
            "type": "number"
        },
        {
            "name": "totalTaxAmount",
            "baseName": "totalTaxAmount",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return Rate.attributeTypeMap;
    }
}

