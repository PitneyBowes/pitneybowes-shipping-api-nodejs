/**
 * Shipping API
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';
import { Address } from './address';
import { CarrierFacilityResponseCarrierFacilityOptions } from './carrierFacilityResponseCarrierFacilityOptions';
import { CrossBorderQuotesRequestBasketItems } from './crossBorderQuotesRequestBasketItems';
import { CrossBorderQuotesRequestRates } from './crossBorderQuotesRequestRates';

export class CrossBorderQuotesRequest {
    /**
    * The currency to return the quote in. Use three uppercase letters, per the ISO currency code (ISO 4217). For example- USD, CAD, or EUR
    */
    'quoteCurrency': string;
    /**
    * The default currency of the basket. Use three uppercase letters, per the ISO currency code (ISO 4217). For example- USD, CAD, or EUR
    */
    'basketCurrency': string;
    'fromAddress'?: Address;
    'toAddress': Address;
    /**
    * The items in the buyer\'s shopping basket.
    */
    'basketItems': Array<CrossBorderQuotesRequestBasketItems>;
    /**
    * Specifies the carrier, service, parcel, and other information. In a response, this field also contains the service charges. Importatn- In a request, the rates array can contain only one rates object.
    */
    'rates': Array<CrossBorderQuotesRequestRates>;
    'shipmentOptions'?: Array<CarrierFacilityResponseCarrierFacilityOptions>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "quoteCurrency",
            "baseName": "quoteCurrency",
            "type": "string"
        },
        {
            "name": "basketCurrency",
            "baseName": "basketCurrency",
            "type": "string"
        },
        {
            "name": "fromAddress",
            "baseName": "fromAddress",
            "type": "Address"
        },
        {
            "name": "toAddress",
            "baseName": "toAddress",
            "type": "Address"
        },
        {
            "name": "basketItems",
            "baseName": "basketItems",
            "type": "Array<CrossBorderQuotesRequestBasketItems>"
        },
        {
            "name": "rates",
            "baseName": "rates",
            "type": "Array<CrossBorderQuotesRequestRates>"
        },
        {
            "name": "shipmentOptions",
            "baseName": "shipmentOptions",
            "type": "Array<CarrierFacilityResponseCarrierFacilityOptions>"
        }    ];

    static getAttributeTypeMap() {
        return CrossBorderQuotesRequest.attributeTypeMap;
    }
}

