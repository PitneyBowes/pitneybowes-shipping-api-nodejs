/**
 * Shipping API
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/PB.ShippingAPI/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/PB.ShippingAPI/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ShippingApi);
  }
}(this, function(expect, ShippingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ShippingApi.RealTransactionDetailReport();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RealTransactionDetailReport', function() {
    it('should create an instance of RealTransactionDetailReport', function() {
      // uncomment below and update the code to test RealTransactionDetailReport
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be.a(ShippingApi.RealTransactionDetailReport);
    });

    it('should have the property adjustmentReason (base name: "adjustmentReason")', function() {
      // uncomment below and update the code to test the property adjustmentReason
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property creditCardFee (base name: "creditCardFee")', function() {
      // uncomment below and update the code to test the property creditCardFee
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property customMessage1 (base name: "customMessage1")', function() {
      // uncomment below and update the code to test the property customMessage1
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property customMessage2 (base name: "customMessage2")', function() {
      // uncomment below and update the code to test the property customMessage2
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property destinationAddress (base name: "destinationAddress")', function() {
      // uncomment below and update the code to test the property destinationAddress
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property destinationCountry (base name: "destinationCountry")', function() {
      // uncomment below and update the code to test the property destinationCountry
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property destinationZip (base name: "destinationZip")', function() {
      // uncomment below and update the code to test the property destinationZip
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property developerId (base name: "developerId")', function() {
      // uncomment below and update the code to test the property developerId
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property developerName (base name: "developerName")', function() {
      // uncomment below and update the code to test the property developerName
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property developerPostagePaymentAccountBalance (base name: "developerPostagePaymentAccountBalance")', function() {
      // uncomment below and update the code to test the property developerPostagePaymentAccountBalance
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property developerPostagePaymentMethod (base name: "developerPostagePaymentMethod")', function() {
      // uncomment below and update the code to test the property developerPostagePaymentMethod
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property developerRateAmount (base name: "developerRateAmount")', function() {
      // uncomment below and update the code to test the property developerRateAmount
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property developerRatePlan (base name: "developerRatePlan")', function() {
      // uncomment below and update the code to test the property developerRatePlan
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property dimensionalWeightOz (base name: "dimensionalWeightOz")', function() {
      // uncomment below and update the code to test the property dimensionalWeightOz
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property externalId (base name: "externalId")', function() {
      // uncomment below and update the code to test the property externalId
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property internationalCountryPriceGroup (base name: "internationalCountryPriceGroup")', function() {
      // uncomment below and update the code to test the property internationalCountryPriceGroup
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property labelFee (base name: "labelFee")', function() {
      // uncomment below and update the code to test the property labelFee
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property mailClass (base name: "mailClass")', function() {
      // uncomment below and update the code to test the property mailClass
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property merchantId (base name: "merchantId")', function() {
      // uncomment below and update the code to test the property merchantId
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property merchantName (base name: "merchantName")', function() {
      // uncomment below and update the code to test the property merchantName
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property merchantPostageAccountPaymentMethod (base name: "merchantPostageAccountPaymentMethod")', function() {
      // uncomment below and update the code to test the property merchantPostageAccountPaymentMethod
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property merchantRate (base name: "merchantRate")', function() {
      // uncomment below and update the code to test the property merchantRate
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property merchantRatePlan (base name: "merchantRatePlan")', function() {
      // uncomment below and update the code to test the property merchantRatePlan
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property meterNumber (base name: "meterNumber")', function() {
      // uncomment below and update the code to test the property meterNumber
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property originZip (base name: "originZip")', function() {
      // uncomment below and update the code to test the property originZip
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property originationAddress (base name: "originationAddress")', function() {
      // uncomment below and update the code to test the property originationAddress
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property packageHeightInInches (base name: "packageHeightInInches")', function() {
      // uncomment below and update the code to test the property packageHeightInInches
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property packageLengthInInches (base name: "packageLengthInInches")', function() {
      // uncomment below and update the code to test the property packageLengthInInches
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property packageType (base name: "packageType")', function() {
      // uncomment below and update the code to test the property packageType
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property packageTypeIndicator (base name: "packageTypeIndicator")', function() {
      // uncomment below and update the code to test the property packageTypeIndicator
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property packageWidthInInches (base name: "packageWidthInInches")', function() {
      // uncomment below and update the code to test the property packageWidthInInches
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property parcelTrackingNumber (base name: "parcelTrackingNumber")', function() {
      // uncomment below and update the code to test the property parcelTrackingNumber
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property postageDepositAmount (base name: "postageDepositAmount")', function() {
      // uncomment below and update the code to test the property postageDepositAmount
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property printStatus (base name: "printStatus")', function() {
      // uncomment below and update the code to test the property printStatus
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property references (base name: "references")', function() {
      // uncomment below and update the code to test the property references
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property refundDenialReason (base name: "refundDenialReason")', function() {
      // uncomment below and update the code to test the property refundDenialReason
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property refundRequestor (base name: "refundRequestor")', function() {
      // uncomment below and update the code to test the property refundRequestor
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property refundStatus (base name: "refundStatus")', function() {
      // uncomment below and update the code to test the property refundStatus
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property shipmentId (base name: "shipmentId")', function() {
      // uncomment below and update the code to test the property shipmentId
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property shipperPostagePaymentAccountBalance (base name: "shipperPostagePaymentAccountBalance")', function() {
      // uncomment below and update the code to test the property shipperPostagePaymentAccountBalance
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property specialServices (base name: "specialServices")', function() {
      // uncomment below and update the code to test the property specialServices
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property transactionDateTime (base name: "transactionDateTime")', function() {
      // uncomment below and update the code to test the property transactionDateTime
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property transactionId (base name: "transactionId")', function() {
      // uncomment below and update the code to test the property transactionId
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property transactionType (base name: "transactionType")', function() {
      // uncomment below and update the code to test the property transactionType
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property valueOfGoods (base name: "valueOfGoods")', function() {
      // uncomment below and update the code to test the property valueOfGoods
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property weightInOunces (base name: "weightInOunces")', function() {
      // uncomment below and update the code to test the property weightInOunces
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

    it('should have the property zone (base name: "zone")', function() {
      // uncomment below and update the code to test the property zone
      //var instane = new ShippingApi.RealTransactionDetailReport();
      //expect(instance).to.be();
    });

  });

}));
