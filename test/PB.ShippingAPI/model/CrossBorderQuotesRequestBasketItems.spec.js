/**
 * Shipping API
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/PB.ShippingAPI/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/PB.ShippingAPI/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ShippingApi);
  }
}(this, function(expect, ShippingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ShippingApi.CrossBorderQuotesRequestBasketItems();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CrossBorderQuotesRequestBasketItems', function() {
    it('should create an instance of CrossBorderQuotesRequestBasketItems', function() {
      // uncomment below and update the code to test CrossBorderQuotesRequestBasketItems
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be.a(ShippingApi.CrossBorderQuotesRequestBasketItems);
    });

    it('should have the property itemId (base name: "itemId")', function() {
      // uncomment below and update the code to test the property itemId
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property categories (base name: "categories")', function() {
      // uncomment below and update the code to test the property categories
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property longDescription (base name: "longDescription")', function() {
      // uncomment below and update the code to test the property longDescription
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property unitWeight (base name: "unitWeight")', function() {
      // uncomment below and update the code to test the property unitWeight
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property itemDimension (base name: "itemDimension")', function() {
      // uncomment below and update the code to test the property itemDimension
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property unitPrice (base name: "unitPrice")', function() {
      // uncomment below and update the code to test the property unitPrice
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property originCountryCode (base name: "originCountryCode")', function() {
      // uncomment below and update the code to test the property originCountryCode
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property parentIdentifier (base name: "parentIdentifier")', function() {
      // uncomment below and update the code to test the property parentIdentifier
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property childIdentifier (base name: "childIdentifier")', function() {
      // uncomment below and update the code to test the property childIdentifier
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property kit (base name: "kit")', function() {
      // uncomment below and update the code to test the property kit
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property kitIdentifier (base name: "kitIdentifier")', function() {
      // uncomment below and update the code to test the property kitIdentifier
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property kitQuantity (base name: "kitQuantity")', function() {
      // uncomment below and update the code to test the property kitQuantity
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property manufacturer (base name: "manufacturer")', function() {
      // uncomment below and update the code to test the property manufacturer
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property brand (base name: "brand")', function() {
      // uncomment below and update the code to test the property brand
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property eccn (base name: "eccn")', function() {
      // uncomment below and update the code to test the property eccn
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property pricing (base name: "pricing")', function() {
      // uncomment below and update the code to test the property pricing
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property hSTariffCode (base name: "hSTariffCode")', function() {
      // uncomment below and update the code to test the property hSTariffCode
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property hSTariffCodeCountry (base name: "hSTariffCodeCountry")', function() {
      // uncomment below and update the code to test the property hSTariffCodeCountry
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property identifiers (base name: "identifiers")', function() {
      // uncomment below and update the code to test the property identifiers
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property imageUrls (base name: "imageUrls")', function() {
      // uncomment below and update the code to test the property imageUrls
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property shipsAlone (base name: "shipsAlone")', function() {
      // uncomment below and update the code to test the property shipsAlone
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property attributes (base name: "attributes")', function() {
      // uncomment below and update the code to test the property attributes
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

    it('should have the property hazmats (base name: "hazmats")', function() {
      // uncomment below and update the code to test the property hazmats
      //var instane = new ShippingApi.CrossBorderQuotesRequestBasketItems();
      //expect(instance).to.be();
    });

  });

}));
