/**
 * Shipping API
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/PB.ShippingAPI/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/PB.ShippingAPI/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ShippingApi);
  }
}(this, function(expect, ShippingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ShippingApi.CommodityInfo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CommodityInfo', function() {
    it('should create an instance of CommodityInfo', function() {
      // uncomment below and update the code to test CommodityInfo
      //var instane = new ShippingApi.CommodityInfo();
      //expect(instance).to.be.a(ShippingApi.CommodityInfo);
    });

    it('should have the property cargoAirCraft (base name: "cargoAirCraft")', function() {
      // uncomment below and update the code to test the property cargoAirCraft
      //var instane = new ShippingApi.CommodityInfo();
      //expect(instance).to.be();
    });

    it('should have the property hazardClass (base name: "hazardClass")', function() {
      // uncomment below and update the code to test the property hazardClass
      //var instane = new ShippingApi.CommodityInfo();
      //expect(instance).to.be();
    });

    it('should have the property infectiousSubstanceContact (base name: "infectiousSubstanceContact")', function() {
      // uncomment below and update the code to test the property infectiousSubstanceContact
      //var instane = new ShippingApi.CommodityInfo();
      //expect(instance).to.be();
    });

    it('should have the property innerReceptaclesQuantity (base name: "innerReceptaclesQuantity")', function() {
      // uncomment below and update the code to test the property innerReceptaclesQuantity
      //var instane = new ShippingApi.CommodityInfo();
      //expect(instance).to.be();
    });

    it('should have the property innerReceptaclesQuantityUOM (base name: "innerReceptaclesQuantityUOM")', function() {
      // uncomment below and update the code to test the property innerReceptaclesQuantityUOM
      //var instane = new ShippingApi.CommodityInfo();
      //expect(instance).to.be();
    });

    it('should have the property packagingGroup (base name: "packagingGroup")', function() {
      // uncomment below and update the code to test the property packagingGroup
      //var instane = new ShippingApi.CommodityInfo();
      //expect(instance).to.be();
    });

    it('should have the property packagingInstructions (base name: "packagingInstructions")', function() {
      // uncomment below and update the code to test the property packagingInstructions
      //var instane = new ShippingApi.CommodityInfo();
      //expect(instance).to.be();
    });

    it('should have the property percentage (base name: "percentage")', function() {
      // uncomment below and update the code to test the property percentage
      //var instane = new ShippingApi.CommodityInfo();
      //expect(instance).to.be();
    });

    it('should have the property properShippingName (base name: "properShippingName")', function() {
      // uncomment below and update the code to test the property properShippingName
      //var instane = new ShippingApi.CommodityInfo();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instane = new ShippingApi.CommodityInfo();
      //expect(instance).to.be();
    });

    it('should have the property quantityUOM (base name: "quantityUOM")', function() {
      // uncomment below and update the code to test the property quantityUOM
      //var instane = new ShippingApi.CommodityInfo();
      //expect(instance).to.be();
    });

    it('should have the property radioActivityDetail (base name: "radioActivityDetail")', function() {
      // uncomment below and update the code to test the property radioActivityDetail
      //var instane = new ShippingApi.CommodityInfo();
      //expect(instance).to.be();
    });

    it('should have the property radioNuclideDetail (base name: "radioNuclideDetail")', function() {
      // uncomment below and update the code to test the property radioNuclideDetail
      //var instane = new ShippingApi.CommodityInfo();
      //expect(instance).to.be();
    });

    it('should have the property reportableQuantity (base name: "reportableQuantity")', function() {
      // uncomment below and update the code to test the property reportableQuantity
      //var instane = new ShippingApi.CommodityInfo();
      //expect(instance).to.be();
    });

    it('should have the property technicalName (base name: "technicalName")', function() {
      // uncomment below and update the code to test the property technicalName
      //var instane = new ShippingApi.CommodityInfo();
      //expect(instance).to.be();
    });

    it('should have the property unId (base name: "unId")', function() {
      // uncomment below and update the code to test the property unId
      //var instane = new ShippingApi.CommodityInfo();
      //expect(instance).to.be();
    });

  });

}));
