/**
 * Shipping API
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Address model module.
 * @module PB.ShippingAPI/model/Address
 * @version 1.0.0
 */
class Address {
    /**
     * Constructs a new <code>Address</code>.
     * @alias module:PB.ShippingAPI/model/Address
     * @param countryCode {String} 2-character country code (ISO-3166-1 alpha-2)
     */
    constructor(countryCode) { 
        
        Address.initialize(this, countryCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, countryCode) { 
        obj['countryCode'] = countryCode;
    }

    /**
     * Constructs a <code>Address</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:PB.ShippingAPI/model/Address} obj Optional instance to populate.
     * @return {module:PB.ShippingAPI/model/Address} The populated <code>Address</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Address();

            if (data.hasOwnProperty('addressLines')) {
                obj['addressLines'] = ApiClient.convertToType(data['addressLines'], ['String']);
            }
            if (data.hasOwnProperty('carrierRoute')) {
                obj['carrierRoute'] = ApiClient.convertToType(data['carrierRoute'], 'String');
            }
            if (data.hasOwnProperty('cityTown')) {
                obj['cityTown'] = ApiClient.convertToType(data['cityTown'], 'String');
            }
            if (data.hasOwnProperty('company')) {
                obj['company'] = ApiClient.convertToType(data['company'], 'String');
            }
            if (data.hasOwnProperty('countryCode')) {
                obj['countryCode'] = ApiClient.convertToType(data['countryCode'], 'String');
            }
            if (data.hasOwnProperty('deliveryPoint')) {
                obj['deliveryPoint'] = ApiClient.convertToType(data['deliveryPoint'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('postalCode')) {
                obj['postalCode'] = ApiClient.convertToType(data['postalCode'], 'String');
            }
            if (data.hasOwnProperty('residential')) {
                obj['residential'] = ApiClient.convertToType(data['residential'], 'Boolean');
            }
            if (data.hasOwnProperty('stateProvince')) {
                obj['stateProvince'] = ApiClient.convertToType(data['stateProvince'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('taxId')) {
                obj['taxId'] = ApiClient.convertToType(data['taxId'], 'String');
            }
            if (data.hasOwnProperty('taxIdType')) {
                obj['taxIdType'] = ApiClient.convertToType(data['taxIdType'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<String>} addressLines
 */
Address.prototype['addressLines'] = undefined;

/**
 * @member {String} carrierRoute
 */
Address.prototype['carrierRoute'] = undefined;

/**
 * @member {String} cityTown
 */
Address.prototype['cityTown'] = undefined;

/**
 * @member {String} company
 */
Address.prototype['company'] = undefined;

/**
 * 2-character country code (ISO-3166-1 alpha-2)
 * @member {String} countryCode
 */
Address.prototype['countryCode'] = undefined;

/**
 * @member {String} deliveryPoint
 */
Address.prototype['deliveryPoint'] = undefined;

/**
 * @member {String} email
 */
Address.prototype['email'] = undefined;

/**
 * @member {String} name
 */
Address.prototype['name'] = undefined;

/**
 * @member {String} phone
 */
Address.prototype['phone'] = undefined;

/**
 * @member {String} postalCode
 */
Address.prototype['postalCode'] = undefined;

/**
 * @member {Boolean} residential
 */
Address.prototype['residential'] = undefined;

/**
 * @member {String} stateProvince
 */
Address.prototype['stateProvince'] = undefined;

/**
 * @member {module:PB.ShippingAPI/model/Address.StatusEnum} status
 */
Address.prototype['status'] = undefined;

/**
 * @member {String} taxId
 */
Address.prototype['taxId'] = undefined;

/**
 * @member {module:PB.ShippingAPI/model/Address.TaxIdTypeEnum} taxIdType
 */
Address.prototype['taxIdType'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Address['StatusEnum'] = {

    /**
     * value: "PARSED"
     * @const
     */
    "PARSED": "PARSED",

    /**
     * value: "VALIDATED_CHANGED"
     * @const
     */
    "VALIDATED_CHANGED": "VALIDATED_CHANGED",

    /**
     * value: "VALIDATED_AND_NOT_CHANGED"
     * @const
     */
    "VALIDATED_AND_NOT_CHANGED": "VALIDATED_AND_NOT_CHANGED",

    /**
     * value: "NOT_CHANGED"
     * @const
     */
    "NOT_CHANGED": "NOT_CHANGED"
};


/**
 * Allowed values for the <code>taxIdType</code> property.
 * @enum {String}
 * @readonly
 */
Address['TaxIdTypeEnum'] = {

    /**
     * value: "EIN"
     * @const
     */
    "EIN": "EIN",

    /**
     * value: "GST"
     * @const
     */
    "GST": "GST",

    /**
     * value: "VAT"
     * @const
     */
    "VAT": "VAT",

    /**
     * value: "RFC"
     * @const
     */
    "RFC": "RFC",

    /**
     * value: "EORI"
     * @const
     */
    "EORI": "EORI"
};



export default Address;

