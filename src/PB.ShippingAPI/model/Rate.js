/**
 * Shipping API
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Carrier from './Carrier';
import DeliveryCommitment from './DeliveryCommitment';
import Discount from './Discount';
import ParcelType from './ParcelType';
import ParcelWeight from './ParcelWeight';
import Services from './Services';
import SpecialService from './SpecialService';
import Surcharge from './Surcharge';
import Tax from './Tax';

/**
 * The Rate model module.
 * @module PB.ShippingAPI/model/Rate
 * @version 1.0.0
 */
class Rate {
    /**
     * Constructs a new <code>Rate</code>.
     * @alias module:PB.ShippingAPI/model/Rate
     * @param carrier {module:PB.ShippingAPI/model/Carrier} 
     * @param parcelType {module:PB.ShippingAPI/model/ParcelType} 
     */
    constructor(carrier, parcelType) { 
        
        Rate.initialize(this, carrier, parcelType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, carrier, parcelType) { 
        obj['carrier'] = carrier;
        obj['parcelType'] = parcelType;
    }

    /**
     * Constructs a <code>Rate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:PB.ShippingAPI/model/Rate} obj Optional instance to populate.
     * @return {module:PB.ShippingAPI/model/Rate} The populated <code>Rate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Rate();

            if (data.hasOwnProperty('alternateBaseCharge')) {
                obj['alternateBaseCharge'] = ApiClient.convertToType(data['alternateBaseCharge'], 'Number');
            }
            if (data.hasOwnProperty('alternateTotalCharge')) {
                obj['alternateTotalCharge'] = ApiClient.convertToType(data['alternateTotalCharge'], 'Number');
            }
            if (data.hasOwnProperty('baseCharge')) {
                obj['baseCharge'] = ApiClient.convertToType(data['baseCharge'], 'Number');
            }
            if (data.hasOwnProperty('baseChargeTaxes')) {
                obj['baseChargeTaxes'] = ApiClient.convertToType(data['baseChargeTaxes'], [Tax]);
            }
            if (data.hasOwnProperty('carrier')) {
                obj['carrier'] = Carrier.constructFromObject(data['carrier']);
            }
            if (data.hasOwnProperty('currencyCode')) {
                obj['currencyCode'] = ApiClient.convertToType(data['currencyCode'], 'String');
            }
            if (data.hasOwnProperty('deliveryCommitment')) {
                obj['deliveryCommitment'] = DeliveryCommitment.constructFromObject(data['deliveryCommitment']);
            }
            if (data.hasOwnProperty('destinationZone')) {
                obj['destinationZone'] = ApiClient.convertToType(data['destinationZone'], 'Number');
            }
            if (data.hasOwnProperty('dimensionalWeight')) {
                obj['dimensionalWeight'] = ParcelWeight.constructFromObject(data['dimensionalWeight']);
            }
            if (data.hasOwnProperty('discounts')) {
                obj['discounts'] = ApiClient.convertToType(data['discounts'], [Discount]);
            }
            if (data.hasOwnProperty('inductionPostalCode')) {
                obj['inductionPostalCode'] = ApiClient.convertToType(data['inductionPostalCode'], 'String');
            }
            if (data.hasOwnProperty('parcelType')) {
                obj['parcelType'] = ParcelType.constructFromObject(data['parcelType']);
            }
            if (data.hasOwnProperty('rateTypeId')) {
                obj['rateTypeId'] = ApiClient.convertToType(data['rateTypeId'], 'String');
            }
            if (data.hasOwnProperty('serviceId')) {
                obj['serviceId'] = Services.constructFromObject(data['serviceId']);
            }
            if (data.hasOwnProperty('specialServices')) {
                obj['specialServices'] = ApiClient.convertToType(data['specialServices'], [SpecialService]);
            }
            if (data.hasOwnProperty('surcharges')) {
                obj['surcharges'] = ApiClient.convertToType(data['surcharges'], [Surcharge]);
            }
            if (data.hasOwnProperty('totalCarrierCharge')) {
                obj['totalCarrierCharge'] = ApiClient.convertToType(data['totalCarrierCharge'], 'Number');
            }
            if (data.hasOwnProperty('totalTaxAmount')) {
                obj['totalTaxAmount'] = ApiClient.convertToType(data['totalTaxAmount'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} alternateBaseCharge
 */
Rate.prototype['alternateBaseCharge'] = undefined;

/**
 * @member {Number} alternateTotalCharge
 */
Rate.prototype['alternateTotalCharge'] = undefined;

/**
 * @member {Number} baseCharge
 */
Rate.prototype['baseCharge'] = undefined;

/**
 * @member {Array.<module:PB.ShippingAPI/model/Tax>} baseChargeTaxes
 */
Rate.prototype['baseChargeTaxes'] = undefined;

/**
 * @member {module:PB.ShippingAPI/model/Carrier} carrier
 */
Rate.prototype['carrier'] = undefined;

/**
 * ISO-4217
 * @member {String} currencyCode
 */
Rate.prototype['currencyCode'] = undefined;

/**
 * @member {module:PB.ShippingAPI/model/DeliveryCommitment} deliveryCommitment
 */
Rate.prototype['deliveryCommitment'] = undefined;

/**
 * @member {Number} destinationZone
 */
Rate.prototype['destinationZone'] = undefined;

/**
 * @member {module:PB.ShippingAPI/model/ParcelWeight} dimensionalWeight
 */
Rate.prototype['dimensionalWeight'] = undefined;

/**
 * @member {Array.<module:PB.ShippingAPI/model/Discount>} discounts
 */
Rate.prototype['discounts'] = undefined;

/**
 * @member {String} inductionPostalCode
 */
Rate.prototype['inductionPostalCode'] = undefined;

/**
 * @member {module:PB.ShippingAPI/model/ParcelType} parcelType
 */
Rate.prototype['parcelType'] = undefined;

/**
 * @member {String} rateTypeId
 */
Rate.prototype['rateTypeId'] = undefined;

/**
 * @member {module:PB.ShippingAPI/model/Services} serviceId
 */
Rate.prototype['serviceId'] = undefined;

/**
 * @member {Array.<module:PB.ShippingAPI/model/SpecialService>} specialServices
 */
Rate.prototype['specialServices'] = undefined;

/**
 * @member {Array.<module:PB.ShippingAPI/model/Surcharge>} surcharges
 */
Rate.prototype['surcharges'] = undefined;

/**
 * @member {Number} totalCarrierCharge
 */
Rate.prototype['totalCarrierCharge'] = undefined;

/**
 * @member {Number} totalTaxAmount
 */
Rate.prototype['totalTaxAmount'] = undefined;






export default Rate;

