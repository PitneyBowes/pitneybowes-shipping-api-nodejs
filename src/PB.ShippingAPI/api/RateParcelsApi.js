/**
 * Shipping API
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Errors from '../model/Errors';
import Shipment from '../model/Shipment';

/**
* RateParcels service.
* @module PB.ShippingAPI/api/RateParcelsApi
* @version 1.0.0
*/
export default class RateParcelsApi {

    /**
    * Constructs a new RateParcelsApi. 
    * @alias module:PB.ShippingAPI/api/RateParcelsApi
    * @class
    * @param {module:PB.ShippingAPI/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:PB.ShippingAPI/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the rateParcel operation.
     * @callback module:PB.ShippingAPI/api/RateParcelsApi~rateParcelCallback
     * @param {String} error Error message, if any.
     * @param {module:PB.ShippingAPI/model/Shipment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Use this operation to rate a parcel before you print and purchase a shipment label. You can rate a parcel for multiple services and multiple parcel types with a single API request.
     * @param {module:PB.ShippingAPI/model/Shipment} shipment Shipment request for Rates
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (default to true)
     * @param {String} opts.xPBShipperRatePlan USPS Only. Shipper rate plan, if applicable. For more information, see [this FAQ](https://shipping.pitneybowes.com/faqs/rates.html#rate-plans-faq)
     * @param {String} opts.xPBIntegratorCarrierId USPS Only. Negotiated services rate, if applicable.
     * @param {String} opts.xPBShipperCarrierAccountId UPS (United Parcel Service) Only. The unique identifier returned in the shipperCarrierAccountId field by the [Register an Existing Carrier Account](https://shipping.pitneybowes.com/api/post-carrier-accounts-register.html) API.
     * @param {Boolean} opts.includeDeliveryCommitment When set to true, returns estimated transit time in days.
     * @param {String} opts.carrier Cross-Border only. Required for PB Cross-Border. Set this to PBI.
     * @param {module:PB.ShippingAPI/api/RateParcelsApi~rateParcelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:PB.ShippingAPI/model/Shipment}
     */
    rateParcel(shipment, opts, callback) {
      opts = opts || {};
      let postBody = shipment;
      // verify the required parameter 'shipment' is set
      if (shipment === undefined || shipment === null) {
        throw new Error("Missing the required parameter 'shipment' when calling rateParcel");
      }

      let pathParams = {
      };
      let queryParams = {
        'includeDeliveryCommitment': opts['includeDeliveryCommitment'],
        'carrier': opts['carrier']
      };
      let headerParams = {
        'X-PB-UnifiedErrorStructure': opts['xPBUnifiedErrorStructure'],
        'X-PB-Shipper-Rate-Plan': opts['xPBShipperRatePlan'],
        'X-PB-Integrator-CarrierId': opts['xPBIntegratorCarrierId'],
        'X-PB-Shipper-Carrier-AccountId': opts['xPBShipperCarrierAccountId']
      };
      let formParams = {
      };

      let authNames = ['oAuth2ClientCredentials'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Shipment;
      return this.apiClient.callApi(
        '/v1/rates', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
