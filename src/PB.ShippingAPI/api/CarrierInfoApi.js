/**
 * Shipping API
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Carrier from '../model/Carrier';
import CarrierFacilityRequest from '../model/CarrierFacilityRequest';
import CarrierFacilityResponse from '../model/CarrierFacilityResponse';
import CarrierRule from '../model/CarrierRule';
import CrossBorderQuotesErrors from '../model/CrossBorderQuotesErrors';
import Errors from '../model/Errors';
import ISOCountryCode from '../model/ISOCountryCode';
import InlineResponse200 from '../model/InlineResponse200';

/**
* CarrierInfo service.
* @module PB.ShippingAPI/api/CarrierInfoApi
* @version 1.0.0
*/
export default class CarrierInfoApi {

    /**
    * Constructs a new CarrierInfoApi. 
    * @alias module:PB.ShippingAPI/api/CarrierInfoApi
    * @class
    * @param {module:PB.ShippingAPI/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:PB.ShippingAPI/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCarrierFacilities operation.
     * @callback module:PB.ShippingAPI/api/CarrierInfoApi~getCarrierFacilitiesCallback
     * @param {String} error Error message, if any.
     * @param {module:PB.ShippingAPI/model/CarrierFacilityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find Carrier Facilities
     * This operation locates Post Offices and other facilities for a given carrier. You can use this operation, for example, to locate all USPS Post Offices near to a given postal code.If you use the Standard Return API and if you use the option to print a QR code, use this API to locate facilities where the buyer can print the label from the QR code.
     * @param {module:PB.ShippingAPI/model/CarrierFacilityRequest} carrierFacilityRequest 
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (default to true)
     * @param {module:PB.ShippingAPI/api/CarrierInfoApi~getCarrierFacilitiesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:PB.ShippingAPI/model/CarrierFacilityResponse}
     */
    getCarrierFacilities(carrierFacilityRequest, opts, callback) {
      opts = opts || {};
      let postBody = carrierFacilityRequest;
      // verify the required parameter 'carrierFacilityRequest' is set
      if (carrierFacilityRequest === undefined || carrierFacilityRequest === null) {
        throw new Error("Missing the required parameter 'carrierFacilityRequest' when calling getCarrierFacilities");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-PB-UnifiedErrorStructure': opts['xPBUnifiedErrorStructure']
      };
      let formParams = {
      };

      let authNames = ['oAuth2ClientCredentials'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CarrierFacilityResponse;
      return this.apiClient.callApi(
        '/v1/carrier-facility', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCarrierLicenseAgreement operation.
     * @callback module:PB.ShippingAPI/api/CarrierInfoApi~getCarrierLicenseAgreementCallback
     * @param {String} error Error message, if any.
     * @param {module:PB.ShippingAPI/model/InlineResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This operation retrieves a carrier's license agreement.
     * This operation retrieves a carrier's license agreement. The operation is used in the [Carrier Registration Tutorial](https://shipping.pitneybowes.com/carrier-registration.html).
     * @param {String} carrier The carrier name. Currently this must be set to: UPS
     * @param {module:PB.ShippingAPI/model/ISOCountryCode} originCountryCode The two-character ISO country code for the country where the shipment originates.
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (default to true)
     * @param {module:PB.ShippingAPI/api/CarrierInfoApi~getCarrierLicenseAgreementCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:PB.ShippingAPI/model/InlineResponse200}
     */
    getCarrierLicenseAgreement(carrier, originCountryCode, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'carrier' is set
      if (carrier === undefined || carrier === null) {
        throw new Error("Missing the required parameter 'carrier' when calling getCarrierLicenseAgreement");
      }
      // verify the required parameter 'originCountryCode' is set
      if (originCountryCode === undefined || originCountryCode === null) {
        throw new Error("Missing the required parameter 'originCountryCode' when calling getCarrierLicenseAgreement");
      }

      let pathParams = {
      };
      let queryParams = {
        'carrier': carrier,
        'originCountryCode': originCountryCode
      };
      let headerParams = {
        'X-PB-UnifiedErrorStructure': opts['xPBUnifiedErrorStructure']
      };
      let formParams = {
      };

      let authNames = ['oAuth2ClientCredentials'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse200;
      return this.apiClient.callApi(
        '/v1/carrier/license-agreements', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCarrierServiceRules operation.
     * @callback module:PB.ShippingAPI/api/CarrierInfoApi~getCarrierServiceRulesCallback
     * @param {String} error Error message, if any.
     * @param {module:PB.ShippingAPI/model/CarrierRule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the rules governing the carrier's services.
     * This operation retrieves the rules governing the carrier's services, including the available parcel types and the limits on weights and dimensions. **This API currently returns rules only for USPS** . Find more information at [Get Carrier Rules](https://shipping.pitneybowes.com/api/get-carrier-rules.html)
     * @param {module:PB.ShippingAPI/model/Carrier} carrier The carrier name. **Currently this must be set to: USPS** 
     * @param {module:PB.ShippingAPI/model/ISOCountryCode} originCountryCode The [two-character ISO country code](https://www.iso.org/obp/ui/#search) for the country where the shipment originates.
     * @param {module:PB.ShippingAPI/model/ISOCountryCode} destinationCountryCode The [two-character ISO country code](https://www.iso.org/obp/ui/#search) for the country of the shipment's destination address.
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (default to true)
     * @param {String} opts.rateTypeId The type of rate requested, such as COMMERCIAL_BASE. If a rate type is not specified, all eligible rate types are returned.
     * @param {String} opts.futureShipmentDate If the shipment is for a future date, and if a rate change is expected before the shipment date, use this field to ensure you get the correct rates and correct rate rules. Note that a rate change can affect the structure of the rate rules as well as the actual rates.Specify this value in UTC/GMT, not in local time. Formats allowed are   * **YYYY-MM-DD**   * **YYYY-MM-DD HH:mm:ss** * **YYYY-MM-DD HH:mm:ss.SSS**
     * @param {Date} opts.returnShipment If set to true, provides only services applicable for return shipment.
     * @param {Boolean} opts.compactResponse If set to true, returns only summary, without special service details.
     * @param {module:PB.ShippingAPI/api/CarrierInfoApi~getCarrierServiceRulesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:PB.ShippingAPI/model/CarrierRule}
     */
    getCarrierServiceRules(carrier, originCountryCode, destinationCountryCode, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'carrier' is set
      if (carrier === undefined || carrier === null) {
        throw new Error("Missing the required parameter 'carrier' when calling getCarrierServiceRules");
      }
      // verify the required parameter 'originCountryCode' is set
      if (originCountryCode === undefined || originCountryCode === null) {
        throw new Error("Missing the required parameter 'originCountryCode' when calling getCarrierServiceRules");
      }
      // verify the required parameter 'destinationCountryCode' is set
      if (destinationCountryCode === undefined || destinationCountryCode === null) {
        throw new Error("Missing the required parameter 'destinationCountryCode' when calling getCarrierServiceRules");
      }

      let pathParams = {
      };
      let queryParams = {
        'carrier': carrier,
        'originCountryCode': originCountryCode,
        'destinationCountryCode': destinationCountryCode,
        'rateTypeId': opts['rateTypeId'],
        'futureShipmentDate': opts['futureShipmentDate'],
        'returnShipment': opts['returnShipment'],
        'compactResponse': opts['compactResponse']
      };
      let headerParams = {
        'X-PB-UnifiedErrorStructure': opts['xPBUnifiedErrorStructure']
      };
      let formParams = {
      };

      let authNames = ['oAuth2ClientCredentials'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CarrierRule;
      return this.apiClient.callApi(
        '/v1/information/rules/rating-services', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCarrierSupportedDestination operation.
     * @callback module:PB.ShippingAPI/api/CarrierInfoApi~getCarrierSupportedDestinationCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This operation returns a list of supported destination countries to which the carrier offers international shipping services.
     * @param {module:PB.ShippingAPI/model/Carrier} carrier The carrier name. Currently this must be set to: USPS
     * @param {module:PB.ShippingAPI/model/ISOCountryCode} originCountryCode The two-character ISO country code for the country where the shipment originates.
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (default to true)
     * @param {module:PB.ShippingAPI/api/CarrierInfoApi~getCarrierSupportedDestinationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getCarrierSupportedDestination(carrier, originCountryCode, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'carrier' is set
      if (carrier === undefined || carrier === null) {
        throw new Error("Missing the required parameter 'carrier' when calling getCarrierSupportedDestination");
      }
      // verify the required parameter 'originCountryCode' is set
      if (originCountryCode === undefined || originCountryCode === null) {
        throw new Error("Missing the required parameter 'originCountryCode' when calling getCarrierSupportedDestination");
      }

      let pathParams = {
      };
      let queryParams = {
        'carrier': carrier,
        'originCountryCode': originCountryCode
      };
      let headerParams = {
        'X-PB-UnifiedErrorStructure': opts['xPBUnifiedErrorStructure']
      };
      let formParams = {
      };

      let authNames = ['oAuth2ClientCredentials'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/v1/countries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
