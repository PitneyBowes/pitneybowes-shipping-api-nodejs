/**
 * Shipping API
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InlineResponse2001 from '../model/InlineResponse2001';
import SchedulePickup from '../model/SchedulePickup';
import SchedulePickupResponse from '../model/SchedulePickupResponse';

/**
* Pickup service.
* @module PB.ShippingAPI/api/PickupApi
* @version 1.0.0
*/
export default class PickupApi {

    /**
    * Constructs a new PickupApi. 
    * @alias module:PB.ShippingAPI/api/PickupApi
    * @class
    * @param {module:PB.ShippingAPI/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:PB.ShippingAPI/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the cancelPickup operation.
     * @callback module:PB.ShippingAPI/api/PickupApi~cancelPickupCallback
     * @param {String} error Error message, if any.
     * @param {module:PB.ShippingAPI/model/InlineResponse2001} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel Pickup
     * This operation schedules a USPS package pickup from a residential or commercial location and provides a pickup confirmation number.
     * @param {String} xPBTransactionId A unique identifier for the transaction, up to 25 characters
     * @param {String} pickupId A unique identifier for the transaction, up to 25 characters
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (default to true)
     * @param {module:PB.ShippingAPI/api/PickupApi~cancelPickupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:PB.ShippingAPI/model/InlineResponse2001}
     */
    cancelPickup(xPBTransactionId, pickupId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xPBTransactionId' is set
      if (xPBTransactionId === undefined || xPBTransactionId === null) {
        throw new Error("Missing the required parameter 'xPBTransactionId' when calling cancelPickup");
      }
      // verify the required parameter 'pickupId' is set
      if (pickupId === undefined || pickupId === null) {
        throw new Error("Missing the required parameter 'pickupId' when calling cancelPickup");
      }

      let pathParams = {
        'pickupId': pickupId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-PB-UnifiedErrorStructure': opts['xPBUnifiedErrorStructure'],
        'X-PB-TransactionId': xPBTransactionId
      };
      let formParams = {
      };

      let authNames = ['oAuth2ClientCredentials'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2001;
      return this.apiClient.callApi(
        '/v1/pickups/{pickupId}/cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPickupschedule operation.
     * @callback module:PB.ShippingAPI/api/PickupApi~getPickupscheduleCallback
     * @param {String} error Error message, if any.
     * @param {module:PB.ShippingAPI/model/SchedulePickupResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Address validation
     * This operation schedules a USPS package pickup from a residential or commercial location and provides a pickup confirmation number.
     * @param {String} xPBTransactionId A unique identifier for the transaction, up to 25 characters
     * @param {module:PB.ShippingAPI/model/SchedulePickup} schedulePickup Schedule Pickup request.
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (default to true)
     * @param {module:PB.ShippingAPI/api/PickupApi~getPickupscheduleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:PB.ShippingAPI/model/SchedulePickupResponse}
     */
    getPickupschedule(xPBTransactionId, schedulePickup, opts, callback) {
      opts = opts || {};
      let postBody = schedulePickup;
      // verify the required parameter 'xPBTransactionId' is set
      if (xPBTransactionId === undefined || xPBTransactionId === null) {
        throw new Error("Missing the required parameter 'xPBTransactionId' when calling getPickupschedule");
      }
      // verify the required parameter 'schedulePickup' is set
      if (schedulePickup === undefined || schedulePickup === null) {
        throw new Error("Missing the required parameter 'schedulePickup' when calling getPickupschedule");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-PB-UnifiedErrorStructure': opts['xPBUnifiedErrorStructure'],
        'X-PB-TransactionId': xPBTransactionId
      };
      let formParams = {
      };

      let authNames = ['oAuth2ClientCredentials'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SchedulePickupResponse;
      return this.apiClient.callApi(
        '/v1/pickups/schedule', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
